/* colors - see style guide for docs. 
Clearly there is more you could place in variables, up to you if you want to use them. My answer does not go beyond colors to keep the code easier to read. */

:root {
    --color1: #001219;
    --color2: #005f73;
    --color3: #3d9397;
    --color4: #94d28d;
    --color5: #ccac4e;
    --color6: #ee9800;
    --color7: #ca6702;
    --color8: #bb3e03;
    --color9: #ae2012;
    --color10: #9b2226;
}

/* generic site styles */

html {
    box-sizing: border-box;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

body {
    font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
    background-color: #dbe5de;
    padding: 0;
    margin: 0;
}

section {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
}

section h2 {
    font-size: 2.5rem;
}

/* new styles start here and continue to the end of the page */

/* Initial mobile layout:
a series of images stacked on top of each other
with the figure caption over the image. */

section ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
}

/* header and navbar */

.header {
    background-color: var(--color5);
}

header {
    padding: 1rem;
    max-width: 1200px;
    margin: 0 auto;
}
/*navigation bar - universal across breakpoints */
nav ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-flow: row wrap;
    justify-content: space-between;
}
nav li {
    flex-basis: 48%;
    margin-bottom: 0.5rem;
}
nav li:first-child {
    flex-basis: 100%;
    text-align: center;
}

nav a {
    text-decoration: none;
    font-size: 1.2rem;
    color: white;
    background-color: var(--color10);
    padding: 0.5rem;
    border-radius: 5px;
    text-align: center;
    display: block;
    padding: 1rem;
}

nav li:first-child a {
    background-color: transparent;
}
nav a:hover {
    background-color: var(--color1);
    color: var(--color5);
}
/*hero styles */

#hero {
    background-color: var(--color7);
    text-align: center;
    max-width: 100%;
    padding: 0;
    margin: 0;
}

#hero img {
    max-width: 100%;
    max-height: 454px;
}

/* To keep mobile screens from being stupid long,
I set a max height on the images and hid the overflow

Spelled out the individial border styles so border-color
could go elsewhere.
Styling is the same for all borders except the color */

figure {
    margin: 0 0 0.5rem 0;
    padding: 0;
    max-height: 400px;
    overflow: hidden;
    position: relative;
    border-width: 10px;
    border-style: solid;
    border-radius: 5px;
}
/* strange oopen space at the bottom of the box which shows through
the transparent overlay - this kills it */

figure img {
    margin-bottom: -4px;
    width: 100%;
    object-fit: cover;
    object-position: 0 -150px;
}
#popart figure img {
    object-position: 0;
    object-fit: cover;
}
figcaption {
    background-color: rgba(255, 255, 255, 0.8);
    font-size: 1.875rem;
    position: absolute;
    bottom: 0;
    width: 100%;
    margin: 0;
    padding: 0;
}

/* style is doing double duty, styling border color and hover color.
Only one declaration usually applies though. */

.one,
.one:hover {
    border-color: var(--color2) var(--color2);
}

.two,
.two:hover {
    border-color: var(--color3) var(--color3);
}

.three,
.three:hover {
    border-color: var(--color4) var(--color4);
}

.four,
.four:hover {
    border-color: var(--color5) var(--color5);
}

.five,
.five:hover {
    border-color: var(--color6) var(--color6);
}
.six,
.six:hover {
    border-color: var(--color7) var(--color7);
}
/* I made the a have a big clickable area with display: block
then the link occupies its containing element, the figcaption */

figcaption a {
    display: block;
    padding: 1rem;
    text-decoration: none;
    color: var(--color1);
}

/* turned on flexbox here - prior to this, elements stacked
as blocks */
/* At this breakpoint, transitioned to 2 figures per line */

/* Mission Section */

#mission {
    margin-bottom: 3rem;
}
#mission p {
    text-shadow: 1px 1px 0px rgb(20, 19, 19);
}

.missiontext {
    display: block;
    line-height: 1.7;
}
.missionimg {
    max-height: 100px;
    display: block;
}

/* Popular prints section */

.popular-wrapper {
    background-color: var(--color2);
    padding: 1rem;
    padding-bottom: 3rem;
}
#popular-prints h2 {
    color: white;
    margin: 1rem;
}
/*footer section */
.footer {
    background-color: var(--color5);
}

footer {
    padding: 3rem;
    display: flex;
    flex-flow: column wrap;
    max-width: 1200px;
    margin: 0 auto;
}
footer h4 {
    margin-top: 0;
}
footer ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-flow: row wrap;
}

footer li {
    margin-right: 1rem;
}

footer address {
    font-style: normal;
    margin-top: 2rem;
    font-weight: bold;
}
#featured figure img {
    object-position: initial;
}
@media (min-width: 550px) {
    section ul,
    footer {
        display: flex;
        flex-flow: row wrap;
        justify-content: space-between;
    }
    section li,
    .social,
    address {
        flex-basis: 49.5%;
    }

    /* turned off object position,
     inherited object-fit: cover */

    figure img {
        object-position: 0;
    }
    /* display: flow-root clears the float and max-width keeps the text
    line lenght longer */
    .missiontext {
        display: flow-root;
        max-width: 900px;
    }
    .missionimg {
        float: left;
        shape-outside: polygon(
            68.84% 96.31%,
            59.38% 72.21%,
            60.88% 2.62%,
            100.98% 4.77%
        );
        max-height: 211px;
    }
    nav ul {
        justify-content: center;
        gap: 1.2em;
    }
    nav li {
        flex-basis: auto;
        margin-bottom: 0;
    }
    nav a {
        color: var(--color1);
        background-color: transparent;
    }
    nav a:hover {
        color: var(--color2);
    }
    #popular-prints ul {
        display: flex;
        flex-flow: row wrap;
    }
    .flex100 {
        flex-basis: 100%;
    }
    .flex100 figure img {
        object-position: 0 -200px;
    }
    #popart ul {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        grid-auto-flow: row;
        gap: 10px;
        align-content: center;
        margin-bottom: 2rem;
    }
    .colspan2 {
        grid-column: span 2;
        align-self: stretch;
    }
    .colspan3 {
        grid-column: span 3;
    }
    .rowspan2 {
        grid-row: span 2;
    }
    .rowspan2 figure {
        max-height: unset;
    }

    /* for some reason, the figures don't always fill their LI container. This keeps them evenly sized */
}

/* At this breakpoint, transitioned to 3 figures per line */

@media (min-width: 800px) {
    section h2 {
        margin-left: 100px;
    }
    section li,
    .social {
        flex-basis: 32.5%;
    }
    address {
        flex-basis: 65.5%;
    }
    /* navigation logo center */
    nav ul {
        justify-content: flex-end;
    }
    nav li:first-child {
        flex-basis: auto;
        margin: 0 auto;
        order: 2;
    }
    nav li:nth-child(2),
    nav li:nth-child(3) {
        order: 1;
    }
    nav li:nth-child(4),
    nav li:nth-child(5) {
        order: 3;
    }
    #popular-prints li {
        flex-basis: 30%;
    }
    .flex100 figure img {
        object-position: 0;
    }
    #popart figure {
        max-height: initial;
    }
}
